
## 快速开始
1. 运行快速测试: `iptv-quicktest`
2. 开始监控: `iptv-monitor`
3. 访问Web界面: http://你的路由器IP/iptv/

## 故障排除
查看日志文件: `tail -f /var/log/iptv_discovery/monitor.log`
重启Web服务: `/etc/init.d/uhttpd restart`
EOF

    log "✅ 配置文件创建完成"
}

# 配置uHTTPd服务器
configure_uhttpd() {
    step "配置Web服务器..."
    
    # 检查uHTTPd配置
    if [ ! -f /etc/config/uhttpd ]; then
        warn "uHTTPd配置文件不存在，创建基本配置..."
        
        cat > /etc/config/uhttpd << 'EOF'
config uhttpd 'main'
    list listen_http '0.0.0.0:80'
    option home '/www'
    option rfc1918_filter '0'
    option max_requests '3'
    option max_connections '100'
    option cert '/etc/uhttpd.crt'
    option key '/etc/uhttpd.key'
    option cgi_prefix '/cgi-bin'
    option script_timeout '60'
    option network_timeout '30'
    option http_keepalive '20'
    option tcp_keepalive '1'
    option lua_prefix '/lua'
    option lua_handler '/usr/lib/uhttpd_lua.so'
EOF
    fi
    
    # 启动uHTTPd服务
    if /etc/init.d/uhttpd enabled 2>/dev/null; then
        log "重启uHTTPd服务..."
        if /etc/init.d/uhttpd restart 2>/dev/null; then
            log "✅ uHTTPd服务重启成功"
        else
            warn "uHTTPd服务重启失败，尝试启动..."
            /etc/init.d/uhttpd start 2>/dev/null || warn "uHTTPd启动失败"
        fi
    else
        log "启动uHTTPd服务..."
        /etc/init.d/uhttpd start 2>/dev/null || warn "uHTTPd启动失败"
        /etc/init.d/uhttpd enable 2>/dev/null || warn "uHTTPd启用失败"
    fi
    
    # 确保防火墙允许访问
    if command -v iptables >/dev/null 2>&1; then
        if ! iptables -L INPUT 2>/dev/null | grep -q "tcp dpt:80"; then
            iptables -I INPUT -p tcp --dport 80 -j ACCEPT 2>/dev/null && \
            log "✅ 防火墙规则已添加" || \
            warn "⚠️  防火墙规则添加失败"
        else
            log "✅ 防火墙规则已存在"
        fi
    fi
    
    log "✅ Web服务器配置完成"
}

# 设置文件权限
set_permissions() {
    step "设置文件权限..."
    
    # 设置脚本权限
    chmod +x "$CGI_DIR/iptv-web" 2>/dev/null && log "✅ CGI脚本权限设置成功" || warn "CGI脚本权限设置失败"
    chmod +x "$SCRIPT_DIR"/iptv-* 2>/dev/null && log "✅ 核心脚本权限设置成功" || warn "核心脚本权限设置失败"
    
    # 设置目录权限
    chmod 755 "$WEB_DIR" 2>/dev/null && log "✅ 网页目录权限设置成功" || warn "网页目录权限设置失败"
    chmod 755 "$LOG_DIR" 2>/dev/null && log "✅ 日志目录权限设置成功" || warn "日志目录权限设置失败"
    
    log "✅ 文件权限设置完成"
}

# 创建系统服务
create_system_service() {
    step "创建系统服务..."
    
    # 创建启动脚本
    cat > /etc/init.d/iptv-discovery << 'EOF'
#!/bin/sh /etc/rc.common

START=99
STOP=10

USE_PROCD=1

start_service() {
    procd_open_instance
    procd_set_param command /bin/true
    procd_close_instance
    
    # 确保目录存在
    mkdir -p /var/log/iptv_discovery
    mkdir -p /tmp/iptv_discovery
    
    echo "IPTV Discovery System initialized"
}

stop_service() {
    # 停止监控进程
    pkill -f "iptv-monitor"
    pkill -f "iptv-realtime"
    echo "IPTV Discovery System stopped"
}
EOF

    chmod +x /etc/init.d/iptv-discovery 2>/dev/null && \
    /etc/init.d/iptv-discovery enable 2>/dev/null && \
    log "✅ 系统服务创建成功" || \
    warn "⚠️  系统服务创建失败"
}

# 验证安装
verify_installation() {
    step "验证安装..."
    
    echo ""
    echo "🔍 检查核心组件:"
    local core_components=("iptv-monitor" "iptv-quicktest" "iptv-generate-config")
    for component in "${core_components[@]}"; do
        if [ -x "$SCRIPT_DIR/$component" ]; then
            echo "  ✅ $component"
        else
            echo "  ❌ $component"
        fi
    done
    
    echo ""
    echo "🔍 检查网页文件:"
    if [ -f "$WEB_DIR/index.html" ]; then
        echo "  ✅ 网页界面"
    else
        echo "  ❌ 网页界面"
    fi
    
    echo ""
    echo "🔍 检查CGI脚本:"
    if [ -x "$CGI_DIR/iptv-web" ]; then
        echo "  ✅ CGI脚本"
    else
        echo "  ❌ CGI脚本"
    fi
    
    echo ""
    echo "🔍 检查配置文件:"
    if [ -f "$CONFIG_DIR/config" ]; then
        echo "  ✅ 配置文件"
    else
        echo "  ❌ 配置文件"
    fi
    
    echo ""
    echo "🔍 检查服务状态:"
    if pgrep uhttpd >/dev/null; then
        echo "  ✅ uHTTPd服务运行中"
    else
        echo "  ❌ uHTTPd服务未运行"
    fi
    
    log "✅ 安装验证完成"
}

# 显示完成信息
show_completion() {
    # 获取本地IP
    LOCAL_IP=$(ip addr show br-lan 2>/dev/null | grep "inet " | awk '{print $2}' | cut -d/ -f1)
    if [ -z "$LOCAL_IP" ]; then
        LOCAL_IP=$(ip addr show | grep "inet " | grep -v "127.0.0.1" | head -1 | awk '{print $2}' | cut -d/ -f1)
    fi
    
    # 如果还是无法获取IP，使用默认值
    LOCAL_IP=${LOCAL_IP:-"你的路由器IP"}
    
    echo ""
    echo -e "${GREEN}╔══════════════════════════════════════════════╗${NC}"
    echo -e "${GREEN}║              🎉 安装完成！                  ║${NC}"
    echo -e "${GREEN}║                 v6.0 优化版                 ║${NC}"
    echo -e "${GREEN}║                                              ║${NC}"
    echo -e "${GREEN}║        🌐 访问地址: http://$LOCAL_IP/iptv/   ║${NC}"
    echo -e "${GREEN}╚══════════════════════════════════════════════╝${NC}"
    echo ""
    echo -e "${BLUE}📋 快速开始指南:${NC}"
    echo "  1. 打开浏览器访问上述地址"
    echo "  2. 点击'快速测试'验证系统状态"
    echo "  3. 在'流量监控'中开始发现IPTV频道"
    echo "  4. 在'配置生成'中创建播放列表和配置"
    echo ""
    echo -e "${BLUE}🔧 常用命令:${NC}"
    echo "  系统测试: iptv-quicktest"
    echo "  开始监控: iptv-monitor"
    echo "  分析流量: iptv-analyze <文件>"
    echo "  生成配置: iptv-generate-config all"
    echo ""
    echo -e "${BLUE}📁 文件位置:${NC}"
    echo "  网页文件: $WEB_DIR/"
    echo "  配置文件: $CONFIG_DIR/config"
    echo "  日志文件: $LOG_DIR/"
    echo "  脚本文件: $SCRIPT_DIR/iptv-*"
    echo ""
    echo -e "${BLUE}🛠️  故障排除:${NC}"
    echo "  重启服务: /etc/init.d/uhttpd restart"
    echo "  查看日志: tail -f $LOG_DIR/web_interface.log"
    echo "  重新安装: 再次运行此脚本"
    echo ""
    echo -e "${BLUE}📖 文档帮助:${NC}"
    echo "  查看文档: cat $CONFIG_DIR/README.md"
    echo "  获取帮助: 访问Web界面的帮助部分"
    echo ""
    echo -e "${GREEN}🚀 开始享受您的IPTV自动发现系统吧！${NC}"
}

# 创建卸载脚本
create_uninstall_script() {
    step "创建卸载脚本..."
    
    cat > "$SCRIPT_DIR/iptv-uninstall" << 'EOF'
#!/bin/sh

# IPTV自动发现系统卸载脚本

echo "🧹 IPTV自动发现系统卸载程序"
echo "========================================"
echo "⚠️  警告: 这将删除所有相关文件和配置"
echo ""
echo -n "确定要继续卸载吗？(y/N): "
read -r choice

if [ "$choice" != "y" ] && [ "$choice" != "Y" ]; then
    echo "卸载已取消"
    exit 0
fi

echo ""
echo "开始卸载..."

# 停止服务
echo "⏹️  停止服务..."
pkill -f "iptv-monitor"
pkill -f "iptv-realtime"

# 删除文件
echo "🗑️  删除文件..."
rm -rf /www/iptv
rm -f /www/cgi-bin/iptv-web
rm -f /usr/bin/iptv-*
rm -rf /etc/iptv_discovery

# 保留日志目录但清理内容
if [ -d "/var/log/iptv_discovery" ]; then
    echo "📝 清理日志文件..."
    rm -f /var/log/iptv_discovery/*
fi

# 清理临时文件
echo "🧹 清理临时文件..."
rm -rf /tmp/iptv_discovery
rm -f /tmp/iptv_streams_*.txt
rm -f /tmp/iptv_playlist_*.m3u
rm -f /tmp/iptv_configs_*

echo ""
echo "✅ 卸载完成!"
echo ""
echo "注意: 以下项目未被删除:"
echo "  - 日志目录: /var/log/iptv_discovery/"
echo "  - 用户数据: 请手动备份重要数据"
echo ""
echo "感谢使用IPTV自动发现系统!"
EOF

    chmod +x "$SCRIPT_DIR/iptv-uninstall"
    log "✅ 卸载脚本创建完成"
}

# 执行安装后测试
post_install_test() {
    step "执行安装后测试..."
    
    echo ""
    echo "🧪 运行快速系统测试..."
    if /usr/bin/iptv-quicktest > /tmp/iptv_install_test.log 2>&1; then
        log "✅ 安装后测试通过"
        echo "📝 测试日志: /tmp/iptv_install_test.log"
    else
        warn "⚠️  安装后测试发现问题，请查看日志: /tmp/iptv_install_test.log"
    fi
}

# 主安装函数
main() {
    show_banner
    
    # 确认安装
    echo -n "开始安装IPTV自动发现系统 v6.0？(Y/n): "
    read -r choice
    case "$choice" in
        n|N)
            log "安装已取消"
            exit 0
            ;;
        *)
            log "开始安装..."
            ;;
    esac
    
    # 执行安装步骤
    check_system
    check_root
    check_network
    install_dependencies
    create_directories
    install_core_scripts
    install_web_interface
    install_cgi_scripts
    create_configuration
    configure_uhttpd
    set_permissions
    create_system_service
    create_uninstall_script
    verify_installation
    post_install_test
    show_completion
    
    echo ""
    log "🎊 安装完成！感谢使用IPTV自动发现系统 v6.0"
    echo ""
    log "💡 提示: 如需卸载，请运行: iptv-uninstall"
}

# 运行主函数
main "$@"
